---

# Rendering logic for AWX 9.2.0 on Kubernetes.
# This play renders the AWX inventory file (and patches other AWX files)
# for our Kubernetes cluster.
#
# You will need a new play for each AWX version you anticipate deploying.

# Manipulate the AWX clone's inventory file...

- name: Set inventory kubernetes_context
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^kubernetes_context="
    line: kubernetes_context={{ ax_kubernetes_context }}

- name: Set inventory kubernetes_namespace
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^kubernetes_namespace="
    line: kubernetes_namespace={{ infra_namespace }}

- name: Set inventory admin_user
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^admin_user="
    line: admin_user={{ ax_admin_fact }}

- name: Set inventory admin_password
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^admin_password="
    line: admin_password={{ ax_admin_password_fact }}

- name: Set inventory pg_hostname
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^pg_hostname="
    line: pg_hostname=database

- name: Set inventory pg_username
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^pg_username="
    line: pg_username={{ ax_user_fact }}

- name: Set inventory pg_password
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^pg_password="
    line: pg_password={{ ax_user_password_fact }}

- name: Set inventory pg_database
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^pg_database="
    line: pg_database={{ ax_database_fact }}

- name: Configure AWX ingress
  block:

  - name: Set inventory kubernetes_ingress_hostname
    lineinfile:
      path: "{{ inventory_file }}"
      regexp: "^kubernetes_ingress_hostname="
      line: kubernetes_ingress_hostname={{ ax_hostname }}

  - name: Set inventory kubernetes_ingress_tls_secret
    lineinfile:
      path: "{{ inventory_file }}"
      regexp: "^kubernetes_ingress_tls_secret="
      line: kubernetes_ingress_tls_secret=im-awx-tls

  - name: Set inventory kubernetes_ingress_annotations (nginx)
    lineinfile:
      path: "{{ inventory_file }}"
      regexp: "^kubernetes_ingress_annotations="
      line: kubernetes_ingress_annotations={ {{ antn_target }}, {{ antn_class }}, {{ antn_issuer }} }
    vars:
      antn_target: "'ingress.kubernetes.io/rewrite-target': '/'"
      antn_class: "'kubernetes.io/ingress.class': 'nginx'"
      antn_issuer: "'cert-manager.io/cluster-issuer': 'letsencrypt-nginx-{{ ax_cert_issuer|lower }}'"

  when:
  - ax_hostname is defined
  - ax_hostname|string|length > 0
  - ax_hostname|string != 'SetMe'

- name: Set inventory task_cpu_request (if not default)
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^task_cpu_request="
    line: task_cpu_request={{ ax_task_cpu_request }}
  when: ax_task_cpu_request|string != 'default'

- name: Remove inventory create_preload_data
  lineinfile:
    path: "{{ inventory_file }}"
    regexp: "^create_preload_data="
    line: create_preload_data=False

# Patch AWX 9.1.0 database migration.
# We need to do this because AWX 9.1.0 suffers from a migration fault.
# See https://github.com/ansible/awx/issues/5578
#
# The workaround/hack is to patch the AWX repo's credentials.py.j2 file
# by replacing the line: -
#   "localhost",
# With: -
#   "rabbitmq.{{ kubernetes_namespace }}.svc",

- name: Set credential file fact
  set_fact:
    credentials_file: "{{ ax_clone_dir }}/awx/installer/roles/kubernetes/templates/credentials.py.j2"

- name: Fix BROKER_URL (localhost -> rabbitmq.{{ kubernetes_namespace }}.svc)
  lineinfile:
    path: "{{ credentials_file }}"
    regexp: "    \"localhost\",$"
    line: "    \"rabbitmq.{{ '{{' }} kubernetes_namespace {{ '}}' }}.svc\","

# Patch the setup of the 'kubernetes_statefulset_api_version' fact.
#
# The existing role tasks rely on being able to query the Kubernetes API
# using the API URI. This relies on authentication, which we may not have.
# The aim of the original tasks was to determine the Kubernetes version and
# set the StatefulSet object version accordingly. If it's Kubernetes 1.9 or
# greater then the StatefulSet version is 'apps/v1', otherwise it's
# 'apps/v1beta1'.
#
# As we're not going to be de dealing with Kubernetes 1.8 or earlier
# (and to avoid needing to use the alternative `kubectl version`) we simply
# remove the two unnecessary tasks from the role play file and hard-code the
# 'kubernetes_statefulset_api_version' fact to 'apps/v1'.
#
# Quick and dirty, works for us and no need for API/URL authentication.

- name: Set kubernetes/main file fact
  set_fact:
    k_main_file: "{{ ax_clone_dir }}/awx/installer/roles/kubernetes/tasks/main.yml"

- name: Remove 'Get kube version from api server' task
  replace:
    path: "{{ k_main_file }}"
    regexp: "^- name: Get kube version from api server[^-]+"
    replace: ''

- name: Remove 'Extract server version from command output' task
  replace:
    path: "{{ k_main_file }}"
    regexp: "^- name: Extract server version from command output[^-]+"
    replace: ''

- name: Set 'kubernetes_statefulset_api_version' (apps/v1)
  lineinfile:
    path: "{{ k_main_file }}"
    regexp: "    kubernetes_statefulset_api_version:"
    line: "    kubernetes_statefulset_api_version: apps/v1"
