---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: rabbitmq
  namespace: {{ infra_namespace }}
spec:
  selector:
    matchLabels:
      name: rabbitmq
  template:
    metadata:
      name: rabbitmq
      labels:
        name: rabbitmq
    spec:
      serviceAccountName: {{ infra_namespace_service_account }}

      # We must have a 'core' node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: informaticsmatters.com/purpose-core
                operator: Exists

      securityContext:
        fsGroup: 100
        runAsUser: 100
        runAsGroup: 100

  {% if all_image_preset_pullsecret_name|string|length > 0 %}
      imagePullSecrets:
      - name: {{ all_image_preset_pullsecret_name }}
  {% endif %}

      # See https://stackoverflow.com/questions/68179365
      #
      # for a discussion of trying to overcome RabbitMQ's problems with a node name
      # that  is not 'localhost'. The hostname is the pod name
      # (rabbitmq-0 for the first stateful set) so we set it explicitly,
      # and then hostAliases to add entries to the /etc/hosts file so we can
      # resolve the node name we are going to give the Pod.
      #
      # We have to set RABBITMQ_NODENAME
      # and we also appear to have to set RABBITMQ_USE_LONGNAME
      hostname: rabbit
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - rabbitmq
        - rabbitmq.{{ infra_namespace }}.svc.cluster.local

      containers:
      - name: rabbitmq
        image: {{ rabbitmq_registry }}{{ rabbitmq_image }}:{{ rabbitmq_version }}
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        env:
        - name: RABBITMQ_NODENAME
          value: 'rabbit@rabbitmq.{{ infra_namespace }}.svc.cluster.local'
        - name: RABBITMQ_USE_LONGNAME
          value: 'true'
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: im-rabbitmq
              key: user
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: im-rabbitmq
              key: password
        ports:
        - name: empd
          containerPort: 4369
        - name: stream
          containerPort: 5552
        - name: ampq
          containerPort: 5672
        - name: http
          containerPort: 15672
        - name: erlang
          containerPort: 25672
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - -q
            - check_running
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 10
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - -q
            - check_port_connectivity
          initialDelaySeconds: 90
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 5
        volumeMounts:
        - mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
          name: rabbitmq-conf
        - mountPath: /etc/rabbitmq/enabled_plugins
          subPath: enabled_plugins
          name: rabbitmq-plugins
        - mountPath: /var/lib/rabbitmq/mnesia
          name: rabbitmq-data
        - mountPath: /var/log/rabbitmq
          name: rabbitmq-log
        resources:
          requests:
            cpu: {{ rabbitmq_cpu_request }}
            memory: {{ rabbitmq_mem_request }}
{% if rabbitmq_cpu_limit or rabbitmq_mem_limit %}
          limits:
{% if rabbitmq_cpu_limit %}
            cpu: {{ rabbitmq_cpu_limit }}
{% endif %}
{% if rabbitmq_mem_limit %}
            memory: {{ rabbitmq_mem_limit }}
{% endif %}
{% endif %}

      volumes:
      - name: rabbitmq-conf
        configMap:
          name: rabbitmq-conf
      - name: rabbitmq-plugins
        configMap:
          name: rabbitmq-plugins
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-data
      - name: rabbitmq-log
        persistentVolumeClaim:
          claimName: rabbitmq-log
