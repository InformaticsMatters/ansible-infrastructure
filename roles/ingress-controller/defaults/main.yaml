---

# This simple role is based on the AWS blog article
# “Using a Network Load Balancer with the NGINX Ingress Controller on Amazon EKS”
# See...
#
# https://aws.amazon.com/blogs/opensource/network-load-balancer-nginx-ingress-controller-eks/
#
# To route traffic to the provisioned NLB, read the AWS documentation...
#
# https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-elb-load-balancer.html
#
# The ingress-nginx namespace is present on an EC2 cluster,
# but not on EKS and so the default behaviour is to
# create the ingress controller (and a network load balancer)
# in EKS clusters.
#
# The Load Balancer name that gets assigned is automatic
# but it is printed in the Ansible log after it's been
# created. You can see the load balancer in the 'ingress-nginx'
# namespace with something line: -
#
#   kubectl describe service/ingress-nginx -n ingress-nginx
#
# Visit the Load Balancer that's created in the AWS console
# and decide whether you want to set the the attributes: -
#
# - 'Deletion protection'
# - 'Cross-Zone Load Balancing' - where you may also need to make sure
#                                 all your zone subnets are covered

# Install (or un-deploy)?
# One of 'present' or 'absent'.
ic_state: present

# Deploy a layer-4 network load balancer?
ic_include_lb: yes

# AWS credentials
aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
awx_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
