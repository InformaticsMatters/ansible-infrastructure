---
kind: CronJob
apiVersion: batch/v1beta1
metadata:
  name: postgres-backup-hourly
  namespace: {{ infra_namespace }}
spec:
  schedule: '{{ pg_bu_hourly_schedule }}'
  startingDeadlineSeconds: 180
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            name: postgres-backup
        spec:
          serviceAccountName: {{ infra_namespace_service_account }}

          # A 'preferred' (not guaranteed)
          # node selection affinity...
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                  - key: purpose
                    operator: In
                    values:
                    - {{ infra_node_purpose }}

          containers:
          - image: informaticsmatters/sql-backup:{{ pg_bu_image_tag }}
            name: postgres-backup
            imagePullPolicy: {{ pg_bu_imagepullpolicy }}
            terminationMessagePolicy: FallbackToLogsOnError
            resources:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 100m
                memory: 128Mi
            env:
            - name: BACKUP_TYPE
              value: hourly
            - name: BACKUP_COUNT
              value: '{{ pg_bu_hourly_history }}'
            - name: PGHOST
              value: database
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: im-postgres
                  key: database_admin_user
            - name: PGADMINPASS
              valueFrom:
                secretKeyRef:
                  name: im-postgres
                  key: database_admin_user_password
            volumeMounts:
            - name: backup-data
              mountPath: /backup

          volumes:
          - name: backup-data
            persistentVolumeClaim:
              claimName: pg-bu
          restartPolicy: Never
