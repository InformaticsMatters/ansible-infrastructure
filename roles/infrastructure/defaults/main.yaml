---

# Deploy (or un-deploy)?
# One of 'present' or 'absent'.
# If we un-deploy the entire infrastructure deployment is removed -
# the namespace, database, PSPs etc.
infra_state: present

# Database (postgres) ---------------------------------------------------------

# There is no 'state' variable here.
# The database is _always_ deployed.

# The database volume size (Gi).
pg_vol_size_g: 50
# The StorageClass of the postgres persistent volume.
# An blank class implied the cluster default.
pg_vol_storageclass: " "

# User database variables
# required by the 'create-user-db' play
# and normally set by the user.
#
# The user is required to define the variables 'db'
# and 'db_user_namespace' to define the name fo the database
# and the namespace from where it wil be used.
db_user: "{{ lookup('password', '/dev/null length=6 chars=ascii_letters') }}"
db_user_password: "{{ lookup('password', '/dev/null length=8 chars=ascii_letters,digits') }}"

# Database (backups) ----------------------------------------------------------

# Deploy backup strategy?
# One of 'present' or 'absent'
pg_bu_state: present
# The database backup volume size (Gi).
pg_bu_vol_size_g: 100
# The backup volume StorageClass.
# This must accommodate the ReadWriteMany access mode.
# An blank class implied the cluster default.
pg_bu_vol_storageclass: " "

# Backup to AWS S3?
# You still need a local backup volume (above).
# Defining these variables means the backup is also written to S3.
#
# If you set 'pg_bu_s3_bucket_name' you must set all the 'pg_bu_s3' variables
# and the S3 (AWS) credentials you supply must be able to read and write
# to the named bucket.
pg_bu_s3_bucket_name: ""
pg_bu_s3_default_region: eu-central-1
pg_bu_s3_access_key_id: ""
pg_bu_s3_secret_access_key: ""

# Keycloak --------------------------------------------------------------------

# Deploy (or un-deploy)?
# One of 'present' or 'absent'.
#
# During the infrastructure deployment stage keycloak database credentials
# and a database will be setup in the infrastructure database regardless -
# the Keycloak DB is (at the moment) part of the core database installation.
kc_state: present

# The hostname of the server that will host Keycloak,
# devoid of the protocol (i.e. 'https://' assumed so just 'example.com')
kc_hostname: SetMe
# By default we use the /auth path (built-in to Keycloak).
# You can set this to blank for domain-based routing but (atm)
# other paths are not supported as I believe that requires changes to
# standalone.xml in keycloak.
# See: -
# https://stackoverflow.com/questions/44624844/
#     configure-reverse-proxy-for-keycloak-docker-with-custom-base-url/54311713#54311713.
kc_hostname_path: auth
# Kubernetes certificate issuer.
# One of 'staging' or 'production' (rate-limited)
kc_cert_issuer: production

# The password to assign to the admin user of our Keycloak server.
kc_admin: admin
kc_admin_password: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters') }}"

# AWX -------------------------------------------------------------------------

# Deploy (or un-deploy)?
# One of 'present' or 'absent'.
#
# During the infrastructure deployment stage AWX database credentials
# and a database will be setup in the infrastructure database regardless -
# the AWX DB is (at the moment) part of the core database installation.
ax_state: present
# The AWX kubernetes context
# This is typically the control-plane content name
ax_kubernetes_context: "{{ lookup('env', 'K8S_CONTEXT') }}"

# The hostname of the server that will host AWX,
# devoid of the protocol (i.e. 'https://' assumed so just 'example.com')
ax_hostname: SetMe
# Kubernetes certificate issuer.
# One of 'staging' or 'production' (rate-limited)
ax_cert_issuer: production

# The password to assign to the admin user of our AWX server.
ax_admin: admin
ax_admin_password: "{{ lookup('password', '/dev/null length=14 chars=ascii_letters,digits') }}"
