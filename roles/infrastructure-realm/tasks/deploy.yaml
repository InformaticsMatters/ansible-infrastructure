---

- name: Pre-flight check
  assert:
    that:
    - ir_realm|string != 'SetMe'
    - ir_realm|string is match('[-a-z]')

# Get (or set) the Realm Manager's secrets.
# The infrastructure namespace must exist...

- name: Get namespace ({{ ir_namespace }})
  k8s_info:
    kind: Namespace
    name: "{{ ir_namespace }}"
  register: n_result

- name: Check namespace
  assert:
    that: n_result.resources|length == 1

- name: Get realm manager secrets (manager-{{ ir_realm }})
  k8s_info:
    kind: Secret
    name: manager-{{ ir_realm }}
    namespace: "{{ ir_namespace }}"
  register: krm_s_result

- block:

  # Extract Realm manager details from pre-deployed secrets...

  - name: Set Keycloak realm manager facts (from secrets)
    set_fact:
      ir_realm_manager_fact: "{{ krm_s_result.resources[0].data.username|b64decode }}"
      ir_realm_manager_password_fact: "{{ krm_s_result.resources[0].data.password|b64decode }}"

  when: krm_s_result.resources|length > 0

- block:

  # No pre-deployed secrets
  # Set facts from variables and deploy.

  - name: Set realm manager facts (from variables)
    set_fact:
      ir_realm_manager_fact: "{{ ir_realm_manager }}"
      ir_realm_manager_password_fact: "{{ ir_realm_manager_password }}"

  - name: Deploy realm manager secret
    k8s:
      definition: "{{ lookup('template', 'secret.yaml.j2') }}"
      wait: yes

  when: krm_s_result.resources|length == 0

# Create the Realm and a set of Roles

- name: Create realm ({{ ir_realm }})
  include_role:
    name: informaticsmatters.infrastructure_user
  vars:
    iu_action: create
    iu_type: realm
    iu_hostname: "{{ keycloak_server_url|urlsplit('hostname') }}"
    iu_namespace: "{{ ir_namespace }}"
    iu_realm: "{{ ir_realm }}"
    iu_realm_manager: "{{ ir_realm_manager_fact }}"
    iu_realm_manager_password: "{{ ir_realm_manager_password_fact }}"
    iu_admin_user: "{{ keycloak_admin }}"
    iu_admin_password: "{{ keycloak_admin_password }}"

- name: Create realm roles
  include_role:
    name: informaticsmatters.infrastructure_user
  vars:
    iu_action: create
    iu_type: role
    iu_hostname: "{{ keycloak_server_url|urlsplit('hostname') }}"
    iu_realm: "{{ ir_realm }}"
    iu_realm_manager: "{{ ir_realm_manager_fact }}"
    iu_realm_manager_password: "{{ ir_realm_manager_password_fact }}"
    iu_roles: "{{ ir_realm_roles }}"
