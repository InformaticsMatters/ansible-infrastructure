---

# Deleting the namespace deletes a lot of stuff for us...

- name: Deleting namespace '{{ efs_namespace }}'
  kubernetes.core.k8s:
    state: absent
    definition: "{{ lookup('template', 'namespace.yaml.j2') }}"
    wait: yes

# Now we just have to delete non-namespace EFS objects.
# And we start by querying the AWS nodes (simply to get the EFS Region)...

- name: Get cluster nodes
  kubernetes.core.k8s_info:
    kind: Node
  register: cluster_result

- name: Check node result
  ansible.builtin.assert:
    that: cluster_result.resources|length > 0

- name: Get cluster Region (from first node)
  ansible.builtin.set_fact:
    cluster_region: "{{ cluster_result.resources[0].metadata.labels['failure-domain.beta.kubernetes.io/region'] }}"

- name: Delete EFS objects
  kubernetes.core.k8s:
    state: absent
    definition: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    wait: yes
  loop:
  - storageclass
  - clusterrolebinding
  - clusterrole

- name: Delete EFS
  efs:
    state: absent
    region: "{{ cluster_region }}"
    name: "{{ efs_backing_volume_name }}"
